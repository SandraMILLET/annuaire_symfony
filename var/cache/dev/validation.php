<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony.Component.Form.Form' => 0,
'IteratorAggregate' => 1,
'Symfony.Component.Form.FormInterface' => 2,
'Symfony.Component.Form.ClearableErrorsInterface' => 3,
'Traversable' => 4,
'Countable' => 5,
'ArrayAccess' => 6,
'App.Entity.User' => 7,
'Symfony.Component.Security.Core.User.UserInterface' => 8,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\Form',
                ],
                'defaultGroup' => [
                    'Form',
                ],
                'traversalStrategy' => [
                    2,
                ],
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[1],
                        ],
                        'Form' => [
                            $o[1],
                        ],
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                        'Form',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'IteratorAggregate',
                ],
                'defaultGroup' => [
                    'IteratorAggregate',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\FormInterface',
                ],
                'defaultGroup' => [
                    'FormInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\ClearableErrorsInterface',
                ],
                'defaultGroup' => [
                    'ClearableErrorsInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Traversable',
                ],
                'defaultGroup' => [
                    'Traversable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Countable',
                ],
                'defaultGroup' => [
                    'Countable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ArrayAccess',
                ],
                'defaultGroup' => [
                    'ArrayAccess',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Regex'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Regex'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Regex'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\EqualTo'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\EqualTo')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                    'email',
                    4 => 'codepostal',
                    6 => 'ville',
                    8 => 'tel',
                    10 => 'confirm_password',
                    12 => 'password',
                ],
                'defaultGroup' => [
                    'User',
                ],
                'members' => [
                    [
                        'email' => [
                            $o[1],
                        ],
                        'codepostal' => [
                            $o[4],
                        ],
                        'ville' => [
                            $o[6],
                        ],
                        'tel' => [
                            $o[8],
                        ],
                        'confirm_password' => [
                            $o[10],
                        ],
                        'password' => [
                            $o[12],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'email' => $o[1],
                        'codepostal' => $o[4],
                        'ville' => $o[6],
                        'tel' => $o[8],
                        'confirm_password' => $o[10],
                        'password' => $o[12],
                    ],
                ],
                'constraints' => [
                    [
                        $o[14],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                    8 => [
                        $o[9],
                    ],
                    10 => [
                        $o[11],
                    ],
                    12 => [
                        $o[13],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[14],
                        ],
                        'User' => [
                            $o[14],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'User' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'Default' => [
                            $o[5],
                        ],
                        'User' => [
                            $o[5],
                        ],
                    ],
                    6 => [
                        'Default' => [
                            $o[7],
                        ],
                        'User' => [
                            $o[7],
                        ],
                    ],
                    8 => [
                        'Default' => [
                            $o[9],
                        ],
                        'User' => [
                            $o[9],
                        ],
                    ],
                    10 => [
                        'Default' => [
                            $o[11],
                        ],
                        'User' => [
                            $o[11],
                        ],
                    ],
                    12 => [
                        'Default' => [
                            $o[13],
                        ],
                        'User' => [
                            $o[13],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'App\\Entity\\User',
                    4 => 'App\\Entity\\User',
                    6 => 'App\\Entity\\User',
                    8 => 'App\\Entity\\User',
                    10 => 'App\\Entity\\User',
                    12 => 'App\\Entity\\User',
                ],
                'property' => [
                    1 => 'email',
                    4 => 'codepostal',
                    6 => 'ville',
                    8 => 'tel',
                    10 => 'confirm_password',
                    12 => 'password',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'User',
                    ],
                    [
                        'Default',
                        'User',
                    ],
                    5 => [
                        'Default',
                        'User',
                    ],
                    7 => [
                        'Default',
                        'User',
                    ],
                    9 => [
                        'Default',
                        'User',
                    ],
                    11 => [
                        'Default',
                        'User',
                    ],
                    13 => [
                        'Default',
                        'User',
                    ],
                    [
                        'Default',
                        'User',
                    ],
                ],
                'message' => [
                    3 => 'Votre Email n\'est pas conforme',
                    5 => 'Votre code postal doit être de ce format : 09350',
                    7 => 'Votre nom de commune ne doit pas contenir de chiffres',
                    9 => 'Votre numéro doit être de ce format : 0123345678',
                    11 => 'Saisissez le même mot de passe',
                    14 => 'L\'email que vous avez indiqué est déja utilisé !',
                ],
                'pattern' => [
                    3 => '#^[a-z0-9._-]@[a-z0-9._-]{2,}\\.[a-z]{2,4}$#',
                    5 => '#/^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/#',
                    7 => '#/^[a-zA-ZáàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕÚÙÛÜÝŸÆŒ._\\s-]{2,50}$/#',
                    9 => '#([0-9]{2} ){4}[0-9]{2}#',
                ],
                'match' => [
                    3 => false,
                    5 => false,
                    7 => false,
                    9 => false,
                ],
                'propertyPath' => [
                    11 => 'password',
                ],
                'minMessage' => [
                    13 => 'Votre mot de passe doit contenir au minimum 8 caractères',
                ],
                'min' => [
                    13 => '8',
                ],
                'fields' => [
                    14 => [
                        'email',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Security\\Core\\User\\UserInterface',
                ],
                'defaultGroup' => [
                    'UserInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
