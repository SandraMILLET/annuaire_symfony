<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserPro extends \App\Entity\UserPro implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'id', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'imageName', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'society', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'SIRET', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'pro', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'companies'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'id', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'imageName', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'society', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'SIRET', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'pro', '' . "\0" . 'App\\Entity\\UserPro' . "\0" . 'companies'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserPro $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo($logo): \App\Entity\UserPro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSociety(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSociety', []);

        return parent::getSociety();
    }

    /**
     * {@inheritDoc}
     */
    public function setSociety(string $society): \App\Entity\UserPro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSociety', [$society]);

        return parent::setSociety($society);
    }

    /**
     * {@inheritDoc}
     */
    public function getSIRET()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSIRET', []);

        return parent::getSIRET();
    }

    /**
     * {@inheritDoc}
     */
    public function setSIRET($SIRET): \App\Entity\UserPro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSIRET', [$SIRET]);

        return parent::setSIRET($SIRET);
    }

    /**
     * {@inheritDoc}
     */
    public function getPro(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPro', []);

        return parent::getPro();
    }

    /**
     * {@inheritDoc}
     */
    public function setPro(?\App\Entity\User $pro): \App\Entity\UserPro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPro', [$pro]);

        return parent::setPro($pro);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanies(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanies', []);

        return parent::getCompanies();
    }

    /**
     * {@inheritDoc}
     */
    public function addCompany(\App\Entity\Company $company): \App\Entity\UserPro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCompany', [$company]);

        return parent::addCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCompany(\App\Entity\Company $company): \App\Entity\UserPro
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCompany', [$company]);

        return parent::removeCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanies($companies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanies', [$companies]);

        return parent::setCompanies($companies);
    }

    /**
     * {@inheritDoc}
     */
    public function setImageFile(\Symfony\Component\HttpFoundation\File\File $imageFile = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageFile', [$imageFile]);

        parent::setImageFile($imageFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageFile(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageFile', []);

        return parent::getImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageName(?string $imageName): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageName', [$imageName]);

        parent::setImageName($imageName);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageName', []);

        return parent::getImageName();
    }

}
